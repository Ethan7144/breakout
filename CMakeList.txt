cmake_minimum_required(VERSION 3.16)
project(Breakout)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# ----------------------------------------------------------------------------------------
# File Discovery
file(GLOB_RECURSE SOURCE_FILES CONFIGURE_DEPENDS
    src/*.cpp
    src/*.h
)

# ----------------------------------------------------------------------------------------
# Include Directories (Internal)
include_directories(${CMAKE_SOURCE_DIR}/src)

# ----------------------------------------------------------------------------------------
# External Libraries
## GLFW
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
add_subdirectory(externals/glfw)

## GLEW
add_subdirectory(externals/glew)
add_definitions(-DGLEW_STATIC)

## OpenAL
add_subdirectory(externals/openal-soft)

## Header-only libraries
include_directories(
    externals/glew/include
    externals/glfw/include
    externals/openal-soft/include
    externals/glm
    externals/stb
)

# ----------------------------------------------------------------------------------------
# Executable
add_executable(${PROJECT_NAME} ${SOURCE_FILES})

# ----------------------------------------------------------------------------------------
# Linking
find_package(OpenGL REQUIRED)

target_link_libraries(${PROJECT_NAME}
    glfw
    glew
    OpenAL
    ${OPENGL_gl_LIBRARY}
)

# ----------------------------------------------------------------------------------------
# Optional: Group Source Files by Folder in IDE
# This only affects visual grouping in IDEs like Visual Studio or CLion
source_group(TREE ${CMAKE_SOURCE_DIR}/src PREFIX "Source" FILES ${SOURCE_FILES})
